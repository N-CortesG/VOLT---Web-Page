---
import Layout from '@layouts/Layout.astro';
import { getTranslation } from '@i18n/index';

const lang = Astro.params.lang;
const currentLang = lang === 'es' || lang === 'en' ? lang : 'es';
const t = getTranslation(currentLang);

export async function getStaticPaths() {
  return [{ params: { lang: 'es' } }, { params: { lang: 'en' } }];
}
---

<Layout title={`VOLT Solar Energy | ${t.header.terms}`}>
  <section
    class="bg-background-secondary dark:bg-dark-secondary w-full pt-20 md:pb-10 pb-5 px-4 mt-5"
  >
    <div class="max-w-7xl mx-auto flex flex-col lg:flex-row gap-10">
      <!-- Tabla de contenido -->
      <aside
        class="hidden lg:block w-1/4 sticky top-28 self-start border-l-2 border-line dark:border-dark-line pl-4"
      >
        <h3 class="text-lg font-bold text-yellow-light dark:text-dark-yellow-light mb-4">
          {t.terms.content}
        </h3>
        <ul class="space-y-2 text-sm">
          {
            t.terms.sections.map((section, index) => (
              <li>
                <a
                  href={`#section-${index}`}
                  class="text-text-secondary dark:text-dark-text-secondary hover:text-yellow-light transition-colors duration-200"
                >
                  {index + 1}. {section.heading}
                </a>
              </li>
            ))
          }
        </ul>
      </aside>

      <!-- Contenido principal -->
      <div class="w-full lg:w-3/4">
        <!-- Encabezado -->
        <div class="flex items-center gap-4 mb-10">
          <div class="p-4 rounded-full bg-yellow-light/10 dark:bg-dark-yellow-light/10">
            <svg
              class="w-10 h-10 text-yellow-light dark:text-dark-yellow-light"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M7 8h10M7 12h6m2 8H5a2 2 0 01-2-2V5a2 2 0 012-2h8l6 6v11a2 2 0 01-2 2z"></path>
            </svg>
          </div>
          <div>
            <h1
              class="text-3xl md:text-4xl font-extrabold text-text-primary dark:text-dark-text-primary leading-snug"
            >
              {t.terms.title}
            </h1>
            <p class="text-sm text-text-secondary dark:text-dark-text-secondary mt-1">
              {t.terms.updated}: {new Date().toLocaleDateString(lang === 'es' ? 'es-CO' : 'en-US')}
            </p>
          </div>
        </div>

        <!-- IntroducciÃ³n -->
        <p
          class="mb-10 text-base text-text-secondary dark:text-dark-text-secondary leading-relaxed"
        >
          {t.terms.intro}
        </p>

        <!-- Secciones -->
        <div class="space-y-10">
          {
            t.terms.sections.map((section, index) => (
              <div id={`section-${index}`} class="scroll-mt-28 space-y-3">
                <h2 class="text-xl font-semibold text-text-primary dark:text-dark-text-primary leading-snug">
                  <span class="text-yellow-light dark:text-dark-yellow-light font-extrabold mr-1">
                    {index + 1}.
                  </span>
                  {section.heading}
                </h2>
                <p class="text-base leading-relaxed text-text-primary dark:text-dark-text-primary">
                  {section.text}
                </p>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <!-- Scroll suave -->
  <script is:inline>
    document.querySelectorAll('a[href^="#section-"]').forEach((anchor) => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          window.scrollTo({
            top: target.offsetTop - 100,
            behavior: 'smooth',
          });
        }
      });
    });
  </script>
</Layout>
