---
interface Props {
  tag: string;
  title: string;
  description: string;
  image?: string;
  values?: { icon: string; label: string }[]; // opcionales
}

const { tag, title, description, image, values } = Astro.props;
---

<div
  class="bg-background dark:bg-dark-background border border-line dark:border-dark-line rounded-2xl shadow-xl p-8 flex flex-col justify-between transition-transform duration-300 hover:scale-[1.02]"
>
  <div>
    <p
      class="text-yellow-light font-semibold text-sm dark:text-dark-yellow-light tracking-wide uppercase mb-3"
    >
      {tag}
    </p>
    <h3 class="text-2xl font-bold text-green-dark dark:text-green-light mb-4">{title}</h3>
    <p class="text-base text-gray-800 dark:text-gray-200 leading-relaxed">{description}</p>
  </div>

  {
    image && (
      <div class="mt-8">
        <img src={image} alt={title} class="h-32 mx-auto object-contain" />
      </div>
    )
  }

  {
    values && (
      <div class="flex justify-center flex-wrap gap-4 mt-8">
        {values.map((val) => (
          <div class="flex flex-col items-center">
            <img src={val.icon} alt={val.label} class="h-10 w-10" />
            <span class="mt-2 text-sm text-gray-900 dark:text-gray-100">{val.label}</span>
          </div>
        ))}
      </div>
    )
  }
</div>
